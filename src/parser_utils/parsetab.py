
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftCOMMACOMMA EPS NEWLINE NONTERM OR RARROW TERMstatement : NONTERM RARROW seq NEWLINE statement\n                 | NONTERM RARROW seq NEWLINEseq : seq OR rhsseq : rhsrhs : rhs COMMA TERM\n           | rhs COMMA NONTERMrhs : TERM\n           | NONTERMrhs : EPS'
    
_lr_action_items = {'NONTERM':([0,3,9,10,11,],[2,4,2,4,15,]),'$end':([1,9,12,],[0,-2,-1,]),'RARROW':([2,],[3,]),'TERM':([3,10,11,],[7,7,14,]),'EPS':([3,10,],[8,8,]),'COMMA':([4,6,7,8,13,14,15,],[-8,11,-7,-9,11,-5,-6,]),'NEWLINE':([4,5,6,7,8,13,14,15,],[-8,9,-4,-7,-9,-3,-5,-6,]),'OR':([4,5,6,7,8,13,14,15,],[-8,10,-4,-7,-9,-3,-5,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,9,],[1,12,]),'seq':([3,],[5,]),'rhs':([3,10,],[6,13,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NONTERM RARROW seq NEWLINE statement','statement',5,'p_statement_nonterm_seq','parser.py',31),
  ('statement -> NONTERM RARROW seq NEWLINE','statement',4,'p_statement_nonterm_seq','parser.py',32),
  ('seq -> seq OR rhs','seq',3,'p_seq_multiple','parser.py',37),
  ('seq -> rhs','seq',1,'p_seq_single','parser.py',43),
  ('rhs -> rhs COMMA TERM','rhs',3,'p_rhs_multiple','parser.py',48),
  ('rhs -> rhs COMMA NONTERM','rhs',3,'p_rhs_multiple','parser.py',49),
  ('rhs -> TERM','rhs',1,'p_rhs_single','parser.py',55),
  ('rhs -> NONTERM','rhs',1,'p_rhs_single','parser.py',56),
  ('rhs -> EPS','rhs',1,'p_rhs_single_eps','parser.py',61),
]
